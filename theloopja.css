/**
 *------
 * BGA framework: Gregory Isabelli & Emmanuel Colin & BoardGameArena
 * theloopja implementation : © <Your name here> <Your email address here>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * theloopja.css
 *
 * theloopja stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (theloopja_theloopja.tpl), and to HTML elements you create dynamically
    (in theloopja.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/

/* Note: you must not use any @import directive */

/********* You can start writing your CSS below this line: **********/

/*
    Example of CSS sprites (a black token and a white token, 20x20px each, embedded in the same "tokens.png" 40x20px image):

    .white_token {
        background-image: url('img/tokens.png');
        background-position: 0px 0px;
    }
    .black_token {
        background-image: url('img/tokens.png');
        background-position: -20px 0px;
    }
    .token {
        width: 20px;
        height: 20px;
        background-repeat: none;
    }
*/

#board {
  width: 500px;
  height: 500px;
  background-image: url("img/temp/board2.png");
  background-size: contain;
  position: relative;

  .era {
    height: 50%;
    width: 50%;
    position: absolute;
    left: 25%;
    opacity: 0;

    svg {
      position: absolute;
      opacity: 0.5;
    }
  }

  .era#blue {
    polygon {
      fill: blue;
    }
  }

  .era#yellow {
    transform: translate(25%) rotate(51deg);
    opacity: 0.5;

    polygon {
      fill: yellow;
    }
  }

  .era#pink {
    transform: translate(25%) rotate(calc(2 * 51deg));

    polygon {
      fill: pink;
    }
  }

  .era#green {
    transform: translate(25%) rotate(calc(3 * 51deg));

    polygon {
      fill: green;
    }
  }

  .era#orange {
    transform: translate(25%) rotate(calc(4 * 51deg));

    polygon {
      fill: orange;
    }
  }

  .era#purple {
    transform: translate(25%) rotate(calc(5 * 51deg));

    polygon {
      fill: purple;
    }
  }

  .era#red {
    transform: translate(25%) rotate(calc(6 * 51deg));

    polygon {
      fill: red;
    }
  }
}

#hq-board {
  width: 500px;
  height: 500px;
  background-image: url("img/temp/hq-board.png");
  background-size: contain;
}
